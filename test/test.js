// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

// /cadastro-memorial
describe('/cadastro-memorial 1)cadastro com alguns campos não preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('Não salvou o memorial', async function() {
    await driver.get("https://funetech.herokuapp.com/formulario-memorial")
    await driver.manage().window().setRect({ width: 1534, height: 922 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("aaaa")
    await driver.findElement(By.id("imagemFalecido")).click()
    await driver.findElement(By.id("imagemFalecido")).sendKeys("bbbb")
    await driver.findElement(By.id("localNasc")).click()
    await driver.findElement(By.id("localNasc")).sendKeys("cccc")
    await driver.findElement(By.id("dataNasc")).click()
    await driver.findElement(By.id("dataNasc")).sendKeys("2022-03-16")
    await driver.findElement(By.id("dataFale")).click()
    await driver.findElement(By.id("dataFale")).sendKeys("2022-03-17")
    await driver.findElement(By.css("input:nth-child(25)")).click()

    await driver.sleep(5000);
    {
      const elements = await driver.findElements(By.css(".alerta-campo-vazio"))
      assert(elements.length)
    }
  })
})

describe('/cadastro-memorial - 2)cadastro com todos os campos preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Salvou o memorial', async function() {
    await driver.get("https://funetech.herokuapp.com/formulario-memorial")
    await driver.manage().window().setRect({ width: 1294, height: 1047 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("fulano")
    await driver.findElement(By.id("imagemFalecido")).click()
    await driver.findElement(By.id("imagemFalecido")).sendKeys("link-imagem")
    await driver.findElement(By.id("localNasc")).click()
    await driver.findElement(By.id("localNasc")).click()
    await driver.findElement(By.id("localNasc")).sendKeys("sao paulo")
    await driver.findElement(By.id("dataNasc")).click()
    await driver.findElement(By.id("dataNasc")).sendKeys("2022-02-09")
    await driver.findElement(By.id("localFale")).click()
    await driver.findElement(By.id("localFale")).sendKeys("eua")
    await driver.findElement(By.id("dataFale")).click()
    await driver.findElement(By.id("dataFale")).sendKeys("20220216")
    await driver.findElement(By.id("subject")).click()
    await driver.findElement(By.id("subject")).sendKeys("mensagem mensagem mensagem mensagem mensagem mensagem mensagem mensagem mensagem ")
    await driver.findElement(By.name("biografia")).click()
    await driver.findElement(By.name("biografia")).sendKeys("biografia biografia biografia biografia biografia biografia biografia biografia biografia biografia biografia biografia biografia ")
    await driver.findElement(By.id("videoDeHomenagem")).click()
    await driver.findElement(By.id("videoDeHomenagem")).sendKeys("https://www.youtube.com")
    await driver.findElement(By.css("input:nth-child(25)")).click()

    await driver.sleep(5000);
    {
      const elements = await driver.findElements(By.css("h1"))
      assert(elements.length)
    }
  })
})


// /pacote-caixao
describe('/pacote-caixao 1)compra com algum dos campos não preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('não fez a compra', async function() {
    await driver.get("https://funetech.herokuapp.com/pacote-caixao")
    await driver.manage().window().setRect({ width: 1398, height: 1040 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("aa")
    await driver.findElement(By.id("telefone_comprador")).click()
    await driver.findElement(By.id("telefone_comprador")).sendKeys("22222")
    await driver.findElement(By.css("input:nth-child(8)")).click()

    await driver.sleep(5000);
    {
      const elements = await driver.findElements(By.css(".alerta-campo-vazio"))
      assert(elements.length)
    }
  })
})

describe('/pacote-caixao 2)compra com todos os campos preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('fez a compra', async function() {
    await driver.get("https://funetech.herokuapp.com/pacote-caixao")
    await driver.manage().window().setRect({ width: 1294, height: 1047 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("fulano")
    await driver.findElement(By.id("telefone_comprador")).click()
    await driver.findElement(By.id("telefone_comprador")).sendKeys("12 1234 5678")
    await driver.findElement(By.id("email_comprador")).click()
    await driver.findElement(By.id("email_comprador")).sendKeys("fulano@gmail.com")
    await driver.findElement(By.css("input:nth-child(8)")).click()

    await driver.sleep(5000);
    assert(await driver.findElement(By.css("h1")).getText() == "O seu pedido de pacote foi concluido com sucesso!")
  })
})


// /pacote-urna
describe('/pacote-urna 1)compra com algum dos campos não preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('não fez a compra', async function() {
    await driver.get("https://funetech.herokuapp.com/pacote-urna")
    await driver.manage().window().setRect({ width: 1398, height: 1040 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("aaaa")
    await driver.findElement(By.id("telefone_comprador")).click()
    await driver.findElement(By.id("telefone_comprador")).sendKeys("3333")
    await driver.findElement(By.css("input:nth-child(8)")).click()

    await driver.sleep(5000);
    {
      const elements = await driver.findElements(By.css(".alerta-campo-vazio"))
      assert(elements.length)
    }
  })
})

describe('/pacote-urna 2)compra com todos os campos preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('fez a compra', async function() {
    await driver.get("https://funetech.herokuapp.com/pacote-urna")
    await driver.manage().window().setRect({ width: 1294, height: 1047 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("fulano")
    await driver.findElement(By.id("telefone_comprador")).click()
    await driver.findElement(By.id("telefone_comprador")).sendKeys("12 1234 5678")
    await driver.findElement(By.id("email_comprador")).click()
    await driver.findElement(By.id("email_comprador")).sendKeys("fulano@gmail.com")
    await driver.findElement(By.css("input:nth-child(8)")).click()

    await driver.sleep(5000);
    assert(await driver.findElement(By.css("h1")).getText() == "O seu pedido de pacote foi concluido com sucesso!")
  })
})


// /pacote-capsula
describe('/pacote-capsula 1)compra com algum dos campos não preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('não fez a compra', async function() {
    await driver.get("https://funetech.herokuapp.com/pacote-capsula")
    await driver.manage().window().setRect({ width: 1398, height: 1040 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("aaa")
    await driver.findElement(By.id("telefone_comprador")).click()
    await driver.findElement(By.id("telefone_comprador")).sendKeys("22222")
    await driver.findElement(By.css("input:nth-child(8)")).click()

    await driver.sleep(5000);
    {
      const elements = await driver.findElements(By.css(".alerta-campo-vazio"))
      assert(elements.length)
    }
  })
})

describe('/pacote-capsula 2)compra com todos os campos preenchidos', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('fez a compra', async function() {
    await driver.get("https://funetech.herokuapp.com/pacote-capsula")
    await driver.manage().window().setRect({ width: 1294, height: 1047 })
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("fulano")
    await driver.findElement(By.id("telefone_comprador")).click()
    await driver.findElement(By.id("telefone_comprador")).sendKeys("12 1234 5678")
    await driver.findElement(By.id("email_comprador")).click()
    await driver.findElement(By.id("email_comprador")).sendKeys("fulano@gmail.com")
    await driver.findElement(By.css("input:nth-child(8)")).click()

    await driver.sleep(5000);
    assert(await driver.findElement(By.css("h1")).getText() == "O seu pedido de pacote foi concluido com sucesso!")
  })
})


// /itens-a-venda
describe('/itens-a-venda', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
    await driver.sleep(1000);
  })
  it('adicionou ao carrinho', async function() {
    await driver.get("https://funetech.herokuapp.com/itens-a-venda")
    await driver.manage().window().setRect({ width: 1294, height: 1040 })
    await driver.findElement(By.css("#produtos > .container-produto:nth-child(1) .botao-carrinho")).click()
    await driver.findElement(By.css("#botao-do-carrinho > button")).click()

    await driver.sleep(5000);
    assert(await driver.findElement(By.css(".nome-item")).getText() == "Caixão de Luxo")
  })

  it('não fez a compra com alguns dos campos não preenchidos', async function() {
    await driver.get("https://funetech.herokuapp.com/itens-a-venda")
    await driver.manage().window().setRect({ width: 1294, height: 1040 })
    await driver.findElement(By.css("#produtos > .container-produto:nth-child(1) .botao-carrinho")).click()
    await driver.findElement(By.css("#botao-do-carrinho > button")).click()
    await driver.findElement(By.css(".botoes-carrinho:nth-child(3) > button")).click()
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("ff")
    await driver.findElement(By.id("email_comprador")).click()
    await driver.findElement(By.id("email_comprador")).sendKeys("aaa")
    await driver.findElement(By.css(".botoes-carrinho > input")).click()

    await driver.sleep(5000);
    {
      const elements = await driver.findElements(By.css(".alerta-campo-vazio"))
      assert(elements.length)
    }
  })

  it('fez a compra com quantidades abaixo ou igual da disponível e todos os campos preenchidos', async function() {
    await driver.get("https://funetech.herokuapp.com/itens-a-venda")
    await driver.manage().window().setRect({ width: 1294, height: 1040 })
    await driver.findElement(By.css("#produtos > .container-produto:nth-child(1) .botao-carrinho")).click()
    await driver.findElement(By.css("#botao-do-carrinho > button")).click()
    await driver.findElement(By.css(".botoes-carrinho:nth-child(3) > button")).click()
    await driver.findElement(By.id("nome")).click()
    await driver.findElement(By.id("nome")).sendKeys("aa")
    await driver.findElement(By.id("telefone_comprador")).click()
    await driver.findElement(By.id("telefone_comprador")).sendKeys("123")
    await driver.findElement(By.id("email_comprador")).click()
    await driver.findElement(By.id("email_comprador")).sendKeys("ggg")
    await driver.findElement(By.css(".botoes-carrinho > input")).click()

    await driver.sleep(5000);
    {
      const elements = await driver.findElements(By.css("h1"))
      assert(elements.length)
    }
  })
})

